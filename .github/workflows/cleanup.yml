name: forty-eight-hour-cleanup

on:
  push:
  # schedule:
  # - cron: '*/1 * * * *'

jobs:
  cleanup:
    runs-on: ubuntu-latest
    env: 
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{secrets.GA_STANDARDS_PAT}}
      - run: |
          import os
          import requests
          import json
          import subprocess
          import datetime

          status, x = subprocess.getstatusoutput("git checkout master")
          status, x = subprocess.getstatusoutput("ls -a")
          print (x)
          status, x = subprocess.getstatusoutput("git branch -a")
          print (x)
          status, x = subprocess.getstatusoutput("git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/master")
          status, x = subprocess.getstatusoutput("git branch -a")
          print (x)

          file_path = 'whitelist_branches.txt'
          whitelisted_branches = []

          def checkWhitelistBranches(branch):
              for i in whitelisted_branches:
                  if (branch==i or branch.startswith(i)):
                      return True
              return False
          
          with open(file_path, 'r') as file:
              for line in file:
                  b = line.strip()
                  whitelisted_branches.append(b)
          
          status, branches = subprocess.getstatusoutput("git branch -r")
          branches = [y for y in (x.strip() for x in branches.splitlines()) if y]

          arr = []
          for item in branches:
              item = item.replace(' ', '')
              item = item.replace('\n', '')
              item = item.replace('origin/', '')
              if not (checkWhitelistBranches(item)):
                  arr.append(item)
          arr = arr[1:]
          print (arr)
          for branch in arr:
              status, x = subprocess.getstatusoutput("git checkout "+branch)
              status, commit_id = subprocess.getstatusoutput("git log master.."+branch+" --oneline | tail -1")
              print ("this is the commit id = "+commit_id)
              space_index = commit_id.find(' ')
              commit_id = commit_id[0:space_index]
              status, date = subprocess.getstatusoutput("git show -s --format='%ci' "+ commit_id)
              now = datetime.datetime.now()
              space_index = date.find(" +")
              date = date[0:space_index]
              year = int(date[0:4])
              month = int(date[5:7])
              day = int(date[8:10])
              hour = int(date[11:13])
              minute = int(date[14:16])
              second = int(date[17:19])
              creation_time = datetime.datetime(year, month, day, hour, minute, second)
              delta = now - creation_time
              if (delta.days<24):
                  test = subprocess.getstatusoutput("git push origin --delete " + branch)
        shell: python
